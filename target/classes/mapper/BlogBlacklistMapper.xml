<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guo.mapper.BlogBlacklistMapper" >
  <resultMap id="BaseResultMap" type="com.guo.entity.BlogBlacklist" >
    <id column="blacklist_id" property="blacklistId" jdbcType="VARCHAR" />
    <result column="bloguser_id" property="bloguserId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.guo.entity.BlogBlacklistWithBLOBs" extends="BaseResultMap" >
    <result column="blacklist_date" property="blacklistDate" jdbcType="LONGVARCHAR" />
    <result column="blacklist_cause" property="blacklistCause" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    blacklist_id, bloguser_id, user_id
  </sql>
  <sql id="Blob_Column_List" >
    blacklist_date, blacklist_cause
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.guo.entity.BlogBlacklistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_blacklist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guo.entity.BlogBlacklistExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_blacklist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_blacklist
    where blacklist_id = #{blacklistId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog_blacklist
    where blacklist_id = #{blacklistId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.guo.entity.BlogBlacklistExample" >
    delete from blog_blacklist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guo.entity.BlogBlacklistWithBLOBs" >
    insert into blog_blacklist (blacklist_id, bloguser_id, user_id, 
      blacklist_date, blacklist_cause)
    values (#{blacklistId,jdbcType=VARCHAR}, #{bloguserId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{blacklistDate,jdbcType=LONGVARCHAR}, #{blacklistCause,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.guo.entity.BlogBlacklistWithBLOBs" >
    insert into blog_blacklist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blacklistId != null" >
        blacklist_id,
      </if>
      <if test="bloguserId != null" >
        bloguser_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="blacklistDate != null" >
        blacklist_date,
      </if>
      <if test="blacklistCause != null" >
        blacklist_cause,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blacklistId != null" >
        #{blacklistId,jdbcType=VARCHAR},
      </if>
      <if test="bloguserId != null" >
        #{bloguserId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="blacklistDate != null" >
        #{blacklistDate,jdbcType=LONGVARCHAR},
      </if>
      <if test="blacklistCause != null" >
        #{blacklistCause,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guo.entity.BlogBlacklistExample" resultType="java.lang.Integer" >
    select count(*) from blog_blacklist
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_blacklist
    <set >
      <if test="record.blacklistId != null" >
        blacklist_id = #{record.blacklistId,jdbcType=VARCHAR},
      </if>
      <if test="record.bloguserId != null" >
        bloguser_id = #{record.bloguserId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.blacklistDate != null" >
        blacklist_date = #{record.blacklistDate,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.blacklistCause != null" >
        blacklist_cause = #{record.blacklistCause,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog_blacklist
    set blacklist_id = #{record.blacklistId,jdbcType=VARCHAR},
      bloguser_id = #{record.bloguserId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      blacklist_date = #{record.blacklistDate,jdbcType=LONGVARCHAR},
      blacklist_cause = #{record.blacklistCause,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_blacklist
    set blacklist_id = #{record.blacklistId,jdbcType=VARCHAR},
      bloguser_id = #{record.bloguserId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guo.entity.BlogBlacklistWithBLOBs" >
    update blog_blacklist
    <set >
      <if test="bloguserId != null" >
        bloguser_id = #{bloguserId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="blacklistDate != null" >
        blacklist_date = #{blacklistDate,jdbcType=LONGVARCHAR},
      </if>
      <if test="blacklistCause != null" >
        blacklist_cause = #{blacklistCause,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blacklist_id = #{blacklistId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.guo.entity.BlogBlacklistWithBLOBs" >
    update blog_blacklist
    set bloguser_id = #{bloguserId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      blacklist_date = #{blacklistDate,jdbcType=LONGVARCHAR},
      blacklist_cause = #{blacklistCause,jdbcType=LONGVARCHAR}
    where blacklist_id = #{blacklistId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guo.entity.BlogBlacklist" >
    update blog_blacklist
    set bloguser_id = #{bloguserId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where blacklist_id = #{blacklistId,jdbcType=VARCHAR}
  </update>
</mapper>