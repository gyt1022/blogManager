package com.guo.controller;import com.guo.entity.*;import com.guo.service.IBlogService;import com.guo.service.IFileService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @author guoyutao * @date 2019/04/04 */@RestController@RequestMapping(value = "/blog")public class BlogController {    @Autowired    private IBlogService blogService;    @Autowired    private IFileService fileService;    /**     * 查询所有博客     * @return     */    @RequestMapping(value = "/query")    public Map<String,Object> queryAll(){        Map<String,Object> result= new HashMap<>();        BlogBlogExample blogExample =new BlogBlogExample();        List<BlogBlogWithBLOBs> blogs=blogService.QueryAll(blogExample);        result.put("blogs",blogs);        return result;    }    /**     * 通过ID删除博客     * @param ids     */    @RequestMapping(value = "/delete")    public void deleteByIds(List<String> ids){        for(String id : ids){            blogService.deleteById(id);        }    }    /**     * 更新博文     * @param blogWithBLOBs     */    @RequestMapping(value = "/update")    public void updateById(BlogBlogWithBLOBs blogWithBLOBs){        blogService.updateById(blogWithBLOBs);    }    /**     * 查询博文完整信息     * @param id     * @return     */    @RequestMapping(value = "/findblog")    public Map<String,Object> findBlogById(String id){        Map<String,Object> result =new HashMap<>();        //创建博文查询条件        BlogBlogExample blogExample = new BlogBlogExample();        BlogBlogExample.Criteria blogcriteria = blogExample.createCriteria();        blogcriteria.andBlogIdEqualTo(id);        //创建文件查询条件        BlogFileExample fileExample = new BlogFileExample();        BlogFileExample.Criteria filecriteria = fileExample.createCriteria();        filecriteria.andBlogIdEqualTo(id);        List<BlogBlogWithBLOBs> blogs = blogService.QueryAll(blogExample);        List<BlogFileWithBLOBs> files = fileService.findFileListByBlogId(fileExample);        result.put("blogs",blogs);        result.put("files",files);        return result;    }    /**     * 添加博文     * @param blogWithBLOBs     * @param fileWithBLOBsList     * @return     */    @RequestMapping(value = "/add")    public Map<String,Object> addBlog(BlogBlogWithBLOBs blogWithBLOBs,List<BlogFileWithBLOBs> fileWithBLOBsList){        Map<String,Object> result = new HashMap<>();        blogService.addBlog(blogWithBLOBs);        for (BlogFileWithBLOBs fileWithBLOBs : fileWithBLOBsList){            fileService.AddFile(fileWithBLOBs);        }        result.put("Code",true);        return result;    }    /**     * 根据用户查询所有博文     * @param userId     * @return     */    @RequestMapping(value = "/findbyuser")    public Map<String,Object> findBlogByUser(String userId){        Map<String,Object> result = new HashMap<>();        BlogBlogExample blogExample = new BlogBlogExample();        BlogBlogExample.Criteria blogcriteria = blogExample.createCriteria();        blogcriteria.andBloguserIdEqualTo(userId);        List<BlogBlogWithBLOBs> blogs = blogService.QueryAll(blogExample);        for(BlogBlogWithBLOBs blog:blogs){            BlogFileExample fileExample = new BlogFileExample();            BlogFileExample.Criteria filecriteria = fileExample.createCriteria();            filecriteria.andBlogIdEqualTo(blog.getBlogId());            List<BlogFileWithBLOBs> files=fileService.findFileListByBlogId(fileExample);            blog.setFileList(files);        }        result.put("blogList",blogs);        return result;    }}