package com.guo.controller;import com.github.pagehelper.PageHelper;import com.github.pagehelper.PageInfo;import com.guo.entity.BlogBlacklistExample;import com.guo.entity.BlogBlacklistWithBLOBs;import com.guo.entity.BlogUserExample;import com.guo.entity.BlogUserWithBLOBs;import com.guo.service.IBlackListService;import com.guo.service.IUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.servlet.ModelAndView;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @author guoyutao * @date 2019/04/09 */@Controller@RequestMapping(value = "/black")public class BlackController {    @Autowired    private IBlackListService blackListService;    @Autowired    private IUserService userService;    /**     * 查询黑名单     * @return     */    @RequestMapping(value = "find")    public ModelAndView findBlacklist(@RequestParam(defaultValue = "1") int pageNum, @RequestParam(defaultValue = "2") int pageSize){        ModelAndView model=new ModelAndView();        PageHelper.startPage(pageNum,pageSize);        BlogBlacklistExample blacklistExample = new BlogBlacklistExample();        List<BlogBlacklistWithBLOBs> blacklists = blackListService.queryBlackAll(blacklistExample);        PageInfo<BlogBlacklistWithBLOBs> pageInfo = new PageInfo<>(blacklists);        model.addObject("blackLists",blacklists);        model.addObject("PageNum",pageInfo.getPageNum());        model.setViewName("/sys/blackList");        return model;    }    /**     * 加入黑名单     * @param blacklistWithBLOBs     */    @RequestMapping(value = "/add")    public void addBalckList(@RequestBody BlogBlacklistWithBLOBs blacklistWithBLOBs){        blackListService.insertBlacklist(blacklistWithBLOBs);        BlogUserExample userExample = new BlogUserExample();        BlogUserExample.Criteria userCriteria = userExample.createCriteria();        userCriteria.andBloguserIdEqualTo(blacklistWithBLOBs.getBloguserId());        BlogUserWithBLOBs userWithBLOBs = new BlogUserWithBLOBs();        // 设置用户为黑名单        userWithBLOBs.setBloguserState("2");        userService.updateByExample(userWithBLOBs,userExample);    }    @RequestMapping(value = "/del")    public void delBlackList(String userId){        BlogBlacklistExample blacklistExample = new BlogBlacklistExample();        BlogBlacklistExample.Criteria blackcriteria=blacklistExample.createCriteria();        blackcriteria.andUserIdEqualTo(userId);        blackListService.deleteBlacklist(blacklistExample);        BlogUserExample userExample = new BlogUserExample();        BlogUserExample.Criteria userCriteria = userExample.createCriteria();        userCriteria.andBloguserIdEqualTo(userId);        BlogUserWithBLOBs userWithBLOBs = new BlogUserWithBLOBs();        // 设置用户状态是正常        userWithBLOBs.setBloguserState("1");        userService.updateByExample(userWithBLOBs,userExample);    }}